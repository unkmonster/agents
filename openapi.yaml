# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/auth/login:
        post:
            tags:
                - Authn
            operationId: Authn_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.authn.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.authn.service.v1.AuthReply'
    /v1/auth/register:
        post:
            tags:
                - Authn
            operationId: Authn_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.authn.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.authn.service.v1.AuthReply'
    /v1/auth/verify:
        post:
            tags:
                - Authn
            operationId: Authn_Verify
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.authn.service.v1.VerifyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.authn.service.v1.VerifyReply'
    /v1/commissions:
        get:
            tags:
                - Commission
            operationId: Commission_ListCommission
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.commission.service.v1.ListCommissionReply'
    /v1/domains:
        get:
            tags:
                - User
            operationId: User_ListUserDomains
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListUserDomainsReply'
    /v1/domains/{domain}/orders:
        get:
            tags:
                - Order
            operationId: Order_ListOrderByDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.service.v1.ListOrderReply'
    /v1/domains/{id}:
        get:
            tags:
                - User
            description: 获取域名
            operationId: User_GetUserDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserDomainReply'
        delete:
            tags:
                - User
            operationId: User_DeleteDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteDomainReply'
    /v1/orders:
        get:
            tags:
                - Order
            operationId: Order_ListOrder
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.service.v1.ListOrderReply'
        post:
            tags:
                - Order
            operationId: Order_CreateOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.service.v1.CreateOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.service.v1.CreateOrderReply'
    /v1/orders/{id}:
        get:
            tags:
                - Order
            operationId: Order_GetOrder
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.service.v1.GetOrderReply'
    /v1/users:
        get:
            tags:
                - User
            operationId: User_ListUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListUserReply'
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.CreateUserReply'
    /v1/users/{id}:
        get:
            tags:
                - User
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserReply'
        delete:
            tags:
                - User
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteUserReply'
        patch:
            tags:
                - User
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UpdateUserReply'
    /v1/users/{parentId}/users/commissions:
        get:
            tags:
                - Commission
            operationId: Commission_ListCommissionByParent
            parameters:
                - name: parentId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.commission.service.v1.ListCommissionByParentReply'
    /v1/users/{userId}/commission:
        get:
            tags:
                - Commission
            operationId: Commission_GetUserCommission
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.commission.service.v1.GetUserCommissionReply'
    /v1/users/{userId}/domains:
        get:
            tags:
                - User
            operationId: User_ListUserDomainsByUserId
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListUserDomainsByUserIdReply'
        post:
            tags:
                - User
            operationId: User_CreateUserDomain
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.CreateUserDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.CreateUserDomainReply'
    /v1/users/{userId}/orders:
        get:
            tags:
                - Order
            operationId: Order_ListOrderByUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.service.v1.ListOrderReply'
components:
    schemas:
        api.authn.service.v1.AuthReply:
            type: object
            properties:
                token:
                    type: string
                user:
                    $ref: '#/components/schemas/api.authn.service.v1.UserInfo'
        api.authn.service.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        api.authn.service.v1.RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.authn.service.v1.UserInfo:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.authn.service.v1.VerifyReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.authn.service.v1.UserInfo'
        api.authn.service.v1.VerifyRequest:
            type: object
            properties:
                token:
                    type: string
        api.commission.service.v1.GetUserCommissionReply:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                totalCommission:
                    type: integer
                    format: int32
                todayCommission:
                    type: integer
                    format: int32
                settledCommission:
                    type: integer
                    format: int32
        api.commission.service.v1.ListCommissionByParentReply:
            type: object
            properties:
                commissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.commission.service.v1.GetUserCommissionReply'
        api.commission.service.v1.ListCommissionReply:
            type: object
            properties:
                commissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.commission.service.v1.GetUserCommissionReply'
        api.order.service.v1.CreateOrderReply:
            type: object
            properties:
                id:
                    type: string
                paymentType:
                    type: string
                name:
                    type: string
                amount:
                    type: integer
                    format: int32
                domain:
                    type: string
        api.order.service.v1.CreateOrderRequest:
            type: object
            properties:
                id:
                    type: string
                paymentType:
                    type: string
                name:
                    type: string
                amount:
                    type: integer
                    format: int32
                domain:
                    type: string
        api.order.service.v1.GetOrderReply:
            type: object
            properties:
                id:
                    type: string
                paymentType:
                    type: string
                name:
                    type: string
                amount:
                    type: integer
                    format: int32
                domain:
                    type: string
        api.order.service.v1.ListOrderReply:
            type: object
            properties:
                orders:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.service.v1.ListOrderReply_Order'
        api.order.service.v1.ListOrderReply_Order:
            type: object
            properties:
                id:
                    type: string
                paymentType:
                    type: string
                name:
                    type: string
                amount:
                    type: integer
                    format: int32
                domain:
                    type: string
        api.user.service.v1.CreateUserDomainReply:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                domain:
                    type: string
        api.user.service.v1.CreateUserDomainRequest:
            type: object
            properties:
                userId:
                    type: string
                domain:
                    type: string
        api.user.service.v1.CreateUserReply:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.user.service.v1.CreateUserRequest:
            type: object
            properties:
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.user.service.v1.DeleteDomainReply:
            type: object
            properties: {}
        api.user.service.v1.DeleteUserReply:
            type: object
            properties: {}
        api.user.service.v1.GetUserDomainReply:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                domain:
                    type: string
        api.user.service.v1.GetUserReply:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.user.service.v1.ListUserDomainsByUserIdReply:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ListUserDomainsByUserIdReply_Domain'
        api.user.service.v1.ListUserDomainsByUserIdReply_Domain:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                domain:
                    type: string
        api.user.service.v1.ListUserDomainsReply:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ListUserDomainsReply_Domain'
        api.user.service.v1.ListUserDomainsReply_Domain:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                domain:
                    type: string
        api.user.service.v1.ListUserReply:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ListUserReply_User'
        api.user.service.v1.ListUserReply_User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.user.service.v1.UpdateUserReply:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                parentId:
                    type: string
                level:
                    type: integer
                    format: int32
        api.user.service.v1.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
tags:
    - name: Authn
    - name: Commission
    - name: Order
      description: 订单指支付完成且成功的订单
    - name: User
