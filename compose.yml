services:
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-ppassword",
        ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      apisix:
  consul:
    image: hashicorp/consul
    restart: always
    ports:
      - 8500:8500
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      apisix:
  user:
    build:
      context: .
      dockerfile: ./app/user/service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
      consul:
        condition: service_healthy
    volumes:
      - ./app/user/service/configs:/data/conf
    ports:
      - 8000:8000
      - 9000:9000
    networks:
      apisix:
  authn:
    build:
      context: .
      dockerfile: ./app/authn/service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
      consul:
        condition: service_healthy
    volumes:
      - ./app/authn/service/configs:/data/conf
    ports:
      - 8001:8000
      - 9001:9000
    networks:
      apisix:
  order:
    build:
      context: .
      dockerfile: ./app/order/service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
      consul:
        condition: service_healthy
    volumes:
      - ./app/order/service/configs:/data/conf
    ports:
      - 8002:8000
      - 9002:9000
    networks:
      apisix:
  commission:
    build:
      context: .
      dockerfile: ./app/commission/service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
      consul:
        condition: service_healthy
    volumes:
      - ./app/commission/service/configs:/data/conf
    ports:
      - 8003:8000
      - 9003:9000
    networks:
      apisix:
networks:
  apisix:
    driver: bridge
    external: true
