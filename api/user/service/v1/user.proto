syntax = "proto3";

package api.user.service.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "agents/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

service User {
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
		option (google.api.http) = {
			post: "/v1/users",
			body: "*"
		};
	};
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
		option (google.api.http) = {
			patch: "/v1/users/{id}",
			body: "*"
		};
	};
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
		option (google.api.http) = {
			delete: "/v1/users/{id}",
		};
	};
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/v1/users/{id}",
		};
	};
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
		option (google.api.http) = {
			get: "/v1/users",
		};
	};
	rpc GetUserByUsername (GetUserByUsernameRequest) returns (GetUserReply) ;

	rpc CreateUserDomain(CreateUserDomainRequest) returns (CreateUserDomainReply) {
		option (google.api.http) = {
			post: "/v1/users/{user_id}/domains",
			body: "*"
		};
	};
	// 获取域名
	rpc GetUserDomain(GetUserDomainRequest) returns (GetUserDomainReply) {
		option (google.api.http) = {
			get: "/v1/domains/{id}",
		};
	};
	rpc ListUserDomains(ListUserDomainsRequest) returns (ListUserDomainsReply) {
		option (google.api.http) = {
			get: "/v1/domains",
		};
	};
	rpc ListUserDomainsByUserId(ListUserDomainsByUserIdRequest) returns (ListUserDomainsByUserIdReply) {
		option (google.api.http) = {
			get: "/v1/users/{user_id}/domains",
		};
	};
	rpc DeleteDomain(DeleteDomainRequest) returns (DeleteDomainReply) {
		option (google.api.http) = {
			delete: "/v1/domains/{id}",
		};
	};

	rpc GetUserByDomain(GetUserByDomainRequest) returns (GetUserByDomainReply);
}

message GetUserByDomainRequest {
	string domain = 1 [(validate.rules).string = {min_len: 1}];
}
message GetUserByDomainReply {
	reserved 3, 4;
	string id = 1;
	string username = 2;
	int32 level = 5;
	float share_percent = 6;
	optional string nickname = 7;
	optional string parent_id = 8;
}

message GetUserByUsernameRequest {
	string username = 1;
}

message DeleteDomainRequest {
	string id = 1;
}
message DeleteDomainReply {}

message ListUserDomainsByUserIdRequest {
	string user_id =1;
}
message ListUserDomainsByUserIdReply {
	message Domain {
		string id = 1;
		string user_id = 2;
		string domain = 3;
	}
	repeated Domain domains = 1;
}

message ListUserDomainsRequest {

}

message ListUserDomainsReply {
	message Domain {
		string id = 1;
		string user_id = 2;
		string domain = 3;
	}
	repeated Domain domains = 1;
}

message GetUserDomainRequest {
	string id = 1;
}
message GetUserDomainReply {
	string id = 1;
	string user_id = 2;
	string domain = 3;
}

message CreateUserDomainRequest{
	string user_id = 2;
	string domain = 3;
}
message CreateUserDomainReply{
	string id = 1;
	string user_id = 2;
	string domain = 3;
}

message CreateUserRequest {
	string username = 2;
	optional string nickname = 4;
	optional string parent_id = 5;
	int32 level = 6;
	float share_percent = 7;
}
message CreateUserReply {
	reserved 3, 4;
	string id = 1;
	string username = 2;
	int32 level = 5;
	float share_percent = 6;
	optional string nickname = 7;
	optional string parent_id = 8;
}

message UpdateUserRequest {
	string id = 1;
	optional string password = 3 [(validate.rules).string = {min_len: 8, max_len: 20}];
	optional string nickname = 4 [(validate.rules).string = {max_len: 20}];
	optional float share_percent = 5;
}
message UpdateUserReply {
	reserved 3, 4;
	string id = 1;
	string username = 2;
	int32 level = 5;
	float share_percent = 6;
	optional string nickname = 7;
	optional string parent_id = 8;
}

message DeleteUserRequest {
	string id = 1;
}
message DeleteUserReply {}

message GetUserRequest {
	string id = 1;
}
message GetUserReply {
	reserved 3, 4;
	string id = 1;
	string username = 2;
	int32 level = 5;
	float share_percent = 6;
	optional string nickname = 7;
	optional string parent_id = 8;
}

message ListUserRequest {}
message ListUserReply {
	message User {
		string id = 1;
		string username = 2;
		string nickname = 3;
		string parent_id = 4;
		int32 level = 5;
		float share_percent = 6;
	}
	repeated User users = 1;
}